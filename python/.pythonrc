import atexit
import os
import rlcompleter
import sys
import pprint

PP = pprint.PrettyPrinter(indent=4)

# Python startup script.            vim: set ft=python :
# from http://www.norvig.com/python-iaq.html
# also see Tarek Ziade's _Expert_Pythom_Programming_ page 19

# Coloured prompt
if os.getenv('TERM') in ('xterm', 'xterm-256color', 'putty', 'rxvt',
                         'screen', 'screen-256color', 'Eterm', 'vt100'):
    try:
        import readline
    except ImportError:
        pass
    else:
        sys.ps1 = '\001\033[0;32m\002>>> \001\033[0m\002'
        sys.ps2 = '\001\033[0;32m\002... \001\033[0m\002'
        # persistent history
        histfile = os.path.expanduser('~/.python_history')
        try:
            readline.read_history_file(histfile)
        except IOError:
            pass
        else:
            def write_history(readline=readline, histfile=histfile):
                try:
                    readline.write_history_file(histfile)
                except IOError:
                    # root, nfs-mounted home with root_squash -> permission denied
                    pass
                else:
                    atexit.register(write_history)
    # Tab completion
    import rlcompleter
    # Reading the initialization (config) file may not be enough to set a
    # completion key, so we set one first and th    en read the file.
    readline_doc = getattr(readline, '__doc__', '')
    if readline_doc is not None and 'libedit' in readline_doc:
        readline.parse_and_bind('bind ^I rl_complete')
    else:
        readline.parse_and_bind('tab: complete')

# reload() on Python 3
try:
    reload
except NameError:
    try:
        # Python 3.4
        from importlib import reload
    except ImportError:
        # Python 3.3
        from imp import reload  # noqa

for mod in [
        histfile,
        atexit,
        write_history,
        rlcompleter,
        readline,
        readline_doc,
        sys,
        os
        ]:
    try:
        del mod
    except:
        pass

